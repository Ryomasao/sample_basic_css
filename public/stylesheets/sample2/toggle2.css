
*,*:before,*:after{
    box-sizing: border-box;
}

.wrapper{
    /*このwrapperはpositionを指定していないので、スタックコンテキストは存在しない。*/
    /*しかし、static以外のものにすることでスタックコンテキストを生成する*/
    /*こうすることで、子要素のlabelの疑似要素とz-indexの共有ができるんじゃないかと*/
    position:relative;
    z-index:0;
    width:300px;
    height:300px;
    border:2px solid;
    display: flex;
    justify-content: center;
    align-items: center;
    background: gray;
}

input[type="radio"]{
    display: none;
}

label{
    border:3px solid #1a1a1a;
    padding:10px;
    position: relative;
    transition: background 600ms ease, color 600ms ease;
    min-width:61px;
    cursor:pointer;
}

#left-label:after{
    top:0;
    left:0;
    position:absolute;
    content:"";
    height: 100%;
    width: 100%;

    background-color:#1a1a1a;
    transition: left 200ms cubic-bezier(0.77, 0, 0.175, 1);

    z-index: -1;

    /*
    border:2px solid;
    border-color:yellow;
    */
}

#left-label{
    border-right:0;
}


/*疑似要素afterを右のラベルの上にかぶせる。*/
#left-label:after{
    left:100%;
}

/*
input[type="radio"].toggle-left + label:after{
    left:100%;
}
*/


input[type="radio"]:checked + label{
    color: #fff;
    transition: color 200ms;
}

input[type="radio"]:checked + label:after{
    left:0% !important;
}


.parent-box{
    /*position static以外を指定してスタックコンテキストを作る*/
    width:300px;
    height:300px;
    display: flex;
    justify-content: center;
    align-items: center;
    background: green;
}

.child-box{
    z-index:-1;
    width:100px;
    height:100px;
    background: red;
}


